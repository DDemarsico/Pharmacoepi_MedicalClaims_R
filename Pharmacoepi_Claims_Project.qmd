---
title: "Pharmacoepi_Claims_Project"
format: html
editor: visual
---

# Pharmacoepidempiology: Claims Project:

## Overview:

This project will be focusing on assessing differences in treatment outcomes for Patients with Parkinson's Disease. The goal of this project is twofold:

1.  To assess if there is a significant difference in days from beginning Levodopa to a diagnosis of Parkinson's Disease with Dyskinesia between individuals using Levopdopa Monotherapy, Levodopa with Rasagiline, and Levodopa with Pramipexole.

2.  To assess if there are regional differences in prescribing frequency for our treatment arms, and if there are differences between prescriber specialty and treatment group.

As a result, I'll be splitting this code into two sections.

### Packages:

```{r}
library(tidyverse)
library(ggeffects)
library(psych)
library(plotly)
library(AER)
library(car)
library(MASS)
library(broom)
library(emmeans)
```

### Data Import:

The data was originally sent to be as a SAS file. The form was transformed to a CSV in SAS studio prior to work. Let's import the completed CSV.

```{r}
data <- read.csv("C:\\Users\\domin\\Downloads\\dd_analytic.csv") 
```

# Data Overview:

## Summary Statistics:

Great, let's start by looking at some summary statistics:

```{r}

summary(data)
```

Ok, a quick overview:

### Treatment Arm:

Our total sample size is 1297 patients. The mean for rasagiline use and pramipexole use (both are binary variables) is .1164 and .118 respectively. Therefore, there are quite a few more patients on levodopa monotherapy. Approximately 23% of our total patient population is using some form of dual therapy with levodopa.

Let's confirm this number:

```{r}

# I also want to check if there are any overlapping records that are using both rasagiline or Pramipexole:

data$bothTx <- ifelse(data$rasagiline == 1 & data$pramipexole == 1, 1, 0)
table(data$bothTx)

# Ok there are 24 patients that are using both Rasagiline and Pramipexole. I want to alter the previous identification variables to remove these patients and only have them stored in the the BothTx variable:

data$rasagiline <- ifelse(data$rasagiline == 1 & data$bothTx == 0, 1, 0)
data$pramipexole <- ifelse(data$pramipexole == 1 & data$bothTx == 0, 1, 0)

# Now let's review the final numbers

table(data$rasagiline)
table(data$pramipexole)
table(data$bothTx)

```

-   Total N: 1297

-   Total Patients Dual therapy with Rasagiline: 127 (\~10%)

-   Total Patients Dual therapy with Pramipexole: 129 (\~10%)

-   Total Patients Therapy with all 3 groups: 24 (\~2%)

-   Total Patients on any form of Dual Therapy: 280 (\~23%)

-   Total Patients using Levodopa Monotherapy: 1017 (\~77%)

Great, let's create two separate variables using this info. I want one variable with the original 3 categories, and an exploratory variable with the dual therapy arm

```{r}

# Let's mutate the results of the other variables into a the primary categorical variable
data <- data %>%
  mutate(tx_group = case_when(
    rasagiline == 1 ~ "Rasagiline",
    pramipexole == 1 ~ "Pramipexole",
    TRUE ~ "Levodopa Monotherapy"
  ))

data$tx_group <- factor(data$tx_group)

# Now let's do the same for the experimental arm

data <- data %>%
  mutate(tx_group_exp = case_when(
    rasagiline == 1 ~ "Rasagiline",
    pramipexole == 1 ~ "Pramipexole",
    bothTx == 1 ~ "Both",
    TRUE ~ "Levodopa Monotherapy"
  ))

data$tx_group_exp <- factor(data$tx_group_exp)


# And finally, let's set each variable to have levodopa as it's reference variable
data$tx_group <- relevel(data$tx_group, ref = "Levodopa Monotherapy")
data$tx_group_exp <- relevel(data$tx_group_exp, ref = "Levodopa Monotherapy")

```

### Days to Dx

Our primary outcome measure for Aim 1 is the time to Dx of PD w/ Dyskinesia from the Index Date (the start date for levodopa). Currently the index date and dx date are both stored in a character variable with the date in YYYY-MM-DD format. We'll need to take the difference of these two dates to find the amount in days.

```{r}

# First, we'll need to change the dates from a character to a date variable

data$index_date <- as.Date(data$index_dt, format  = "%Y-%m-%d")
data$dx_date <- as.Date(data$pd_dyskinesia_dt, format  = "%Y-%m-%d")

# Now we can take the difference between these dates.
data$days2dx <- as.numeric(data$dx_date - data$index_date)

# Now let's check our results:
summary(data$days2dx)

# Mean number of days is ~960 days or 2.63 years. Since our data needs to be considerd a 'count', let's make sure all of the values are integers"
unique(data$days2dx)


```

This data already looks very good. However, there are quite a few lower day counts within this dataset. For example, we have 1 patient that took Levodopa on the index date, and immediately returned the next day to have have an updated dx.

This strikes me as a situation where the clinician provided a dose which was much too high for the patient. The focus of this project is to focus on a stereotypical case where the dose of levodopa is proportionately small relative to the patient's needs.

Given this fact, I think it would be prudent to separate this dataset to remove the patients that have a diagnosis within 30 days of index.

```{r}

# Let's create a new data frame 
data2 <- data %>%
  filter(days2dx >= 30)

# Now let's check the unique values to see if anything changed:
unique(data2$days2dx)

# Great, this removed all of the lower values, let's check to see what our working N is now:
table(data2$rasagiline)
table(data2$pramipexole)
table(data2$bothTx)

```

After removing our the lower values from our sample of days to dx, we settled on our final count of:

-   **Total N: 1282 - Removed 15 patients**

-   **Rasagiline Dual: 127**

-   **Pramipexole Dual: 128**

-   **Rasagiline & Pramipexole: 24**

-   **Levodopa Monotherapy: 1,003**

This distribution shows us that of the 15 patients that were removed, 14 of them were in the Levodopa Monotherapy group, and 1 of them was in the Pramipexole Dual Therapy group.

This aligns with the idea that the initial dose was incorrectly prescribed by the clinician or interacted with the 1 patient's pramipexole dose.

### Obese/Underweight

Sinemet (Carbidopa/Levodopa) is given in relatively large quantities, therefore it is hypothesized that weight/size may have an impact on whether or not the concentration of Levodopa is sufficient to elicit dyskinesia.

```{r}

# Let's start by assessing the rates of Obsese/Underweight Patients
table(data2$obese)
table(data2$underweight)
```

Only 5 patients were categorized as obese, and only 2 patients were categorized as underweight. These numbers are far too low for analysis, and will not be utilized.

### Age

Another interesting covariate will be age. This is rather simple, let's get a general overview of the age distribution

```{r}

summary(data2$age)

# There looks to be a minimum value of 12, which is quite weird as PD is mostly a young person's disease. Let's take a look at the unique values

unique(data2$age)

# Upon the review, there are two values of 12 and 17, which are far too young for this study. This makes me feel that this was a data entry error. Let's create a new dataframe that removes these subjects.


```

Upon the review, there are two values of 12 and 17, which are far too young for this study. This makes me feel that this was a data entry error. Let's create a new dataframe that removes these subjects.

```{r}

# Let's create a new data frame 
data2 <- data2 %>%
  filter(age >= 30)

# Now let's check the unique values to see if anything changed:
unique(data2$age)

# Great, this removed all of the lower values, let's check to see what our working N is now:
table(data2$rasagiline)
table(data2$pramipexole)
table(data2$bothTx)
```

-   Total N = 1278 - 4 Patients Removed

-   Rasagiline = 127

-   Pramipexole = 127

-   Both = 24

-   Monotherapy = 1,000

This breakdown show 4 more patients removed from the data frame. 3 of which were from the Monotherapy group and 1 was from the Pramipexole group.

### Sex:

Same situation with Sex, we'll want to assess the distribution to see if there are strange differences in the distribution

```{r}

table(data2$der_sex)

# 513 Females and 765 Males. This is suficient, let's make this a binary variable.

data2$sex <- ifelse(data2$der_sex == "F", 0, 1)
table(data2$sex)
```

513 Females and 765 Males. This is sufficient for use in our models.

### State & Region

There are two variables for both state and region, respectively. I want to look at our state variable first to assess rates, and then we can assess the region variable to determine if there are different bins that we want for our state.

```{r}

table(data2$pat_state)

# We have data for only 42 states. Let's check how the region grouping worked

table(data2$pat_region)
```

This regional distribution is much neater. This will most likely be the value used in further analysis.

### Insurance:

Same thing with Insurance. Let's make sure the distributions aren't strange.

```{r}

table(data2$insurance_new)

# 496 patients wil commercial insurance, and 774 with governemnt, and 8 other. Let's make this into a factor

data2 <- data2 %>%
  mutate(insurance = case_when(
    insurance_new == "C" ~ "Commercial",
    insurance_new == "G" ~ "Government",
    TRUE ~ NA
  ))

data2$insurance <- as.factor(data2$insurance)

```

496 on commercial, 774 on Government, and 8 on Other. This distribution is perfectly fine.

### Specialist?

I also want to know the rates of which specialists prescribe the medications of interest. Let's take a peek at those as well

```{r}

table(data2$specialist_levodopa)
table(data2$specialist_rasagiline)
table(data2$specialist_pramipexole)

```

-   We have info on 785 patients for levodopa and \~86% (687) of patients received levodopa from a specialist.

-   We have info on 95 patients for Rasagiline and \~94% (89) of patients received rasagiline from a specialist

-   We have info on 99 patients for Pramipexole and \~85% of patients received pramipexole from a specialist.

This isn't a huge sample size, but it is sufficient for some interesting questions. It would be interesting to compare the few subjects that received care not from a specialist, and look at their rates. Let's make a new variable for this:

```{r}

# First, let's create a new variable by going row by row determining our values

data2 <- data2 %>%
  rowwise() %>%
  mutate(
    pcp = case_when(
      all(is.na(c_across(c(specialist_levodopa, specialist_pramipexole,          specialist_rasagiline)))) ~ NA_real_,              # All are NA
      any(c_across(c(specialist_levodopa, specialist_pramipexole,                specialist_rasagiline)) == 0, na.rm = TRUE) ~ 1,         # Any 0
      any(c_across(c(specialist_levodopa, specialist_pramipexole,                specialist_rasagiline)) == 1, na.rm = TRUE) ~ 0,         # Any 1
      TRUE ~ NA_real_                           # Catch-all for other NA combos
    )
  ) %>%
  ungroup()

# Now let's check to see if this worked
table(data2$pcp)
```

Great, we have a total of 110 patients that are considered to have not received care by a neurology specialist during their time in the study.

### Charleson Comorbidity Score

Finally, let's check the CCS to determine if the distribution seems ok.

```{r}

# Let's check frequency first
table(data2$cqci)

# OK, this makes sense, more people who are generally healthy, so a natural right skew.

summary(data2$cqci)

# Mean is 1.261
```

Definitely right-skewed, but is definitely usable.

# Aim 1:

## Poisson or Negative Binomial

The goal of Aim 1 is to assess if there are any differences in the number of days between starting Levodopa and diagnosis of PD w/ Dyskinesia. I am considering using either a Poisson or a Negative Binomial Regression for this data, as the primary outcome is discrete (individual days). To determine which we will use, let's test the dispersion of our most basic model using our 'days2dx' variable and treatment arm variable.

```{r}

# First let's fit a fully reduced model with only the treatment groups and days2dx

base_poisson <- glm(days2dx ~ tx_group, family = poisson, data = data2)

# Now let's see if this fits the dispersion test:

dispersiontest(base_poisson)

# p-value of <.001. Therefore the data is overdispersed.

# let's also test to see if the variance exceeds the mean.
var(data2$days2dx)

# mean = 971, variance = 229528
```

Our Dispersion test of our Univariate model shows dispersion. Therefore, we will need to utilize a negative binomial regression.

### NBR basics:

There are 5 assumptions necessary for a Negative Binomial Regression:

-   A Count Dependent Variable - **CONFIRMED**

-   Overdispersion - **CONFIRMED**

-   Independence of Observations - **CONFIRMED**

-   Linearity of Log-Link Function

-   Multicollinearity

Let's start by running the basic univariate structure

This is assumes that the log of the expected count is a linear function of the predictors. To test this, we'll use a Component + Residual plots to test for non-linearity:

```{r}


# First let's run the univariate negative binomial regression
neg_bin_base <- glm.nb(days2dx ~ tx_group, data = data2)
summary(neg_bin_base)

# Univariate Analysis reveals a statistically significant relationship with Rasagiline but not with Pramipexole. Let's exponentiate the results to see actual rates.
exp(coef(neg_bin_base))
exp(confint(neg_bin_base))


```

On Average, a patient starting Levodopa Monotherapy is expected to take 941 days to reach a diagnosis of PD w/ Dyskinesia. The Pramipexole group is approaching significance (p = .07, CI: .99 1.25), but the Rasagiline group has a rate of 1.20 (p = .003, CI: 1.07, 1.36).

**Put plainly, individuals who were taking pramipexole dual-therapy range from taking 1% less days to 25% more days to reach dx. While not Statistically Significant, this is definitely clinically significant.**

**Indivduals who were taking Rasagiline dual-therapy, on average, take 20% longer to reach a diagnosis of Parkinson's Disease w/ Dyskinesia, with a range of 7% longer up to 36% longer. If a levodopa monotherapy patient takes 941 days to reach dx on average, a patient taking rasagiline would take 1129 days on average (almost 2/3 of a year). In the best possible scenario, these patients would take up to 339 days longer.**

## Multivariate Analysis:

Great, now that we have significant results from the Univariate analysis, let's begin model selection for a multivariate analysis.

For this portion, I'll begin by using a saturated model for our NBR. The additional covariates will include:

-   Age

-   Sex

-   Insurance:

-   Specialist

-   CCS

```{r}

# Let's fit the data to model to only use rows that are completed
vars_used <- all.vars(days2dx ~ tx_group + age + sex + insurance + pcp + cqci)  

data2_clean <- data2[complete.cases(data2[, vars_used]), ]

# Let's begin with our saturated model first and see if there are different results when controlling for additional factors.

neg_bin_saturated <- glm.nb(days2dx ~ tx_group + cqci + age + sex + insurance + pcp, data = data2_clean)
summary(neg_bin_saturated)


#library(ggeffects)
ggpredict(neg_bin_saturated, terms = c("cqci", "tx_group"))
```

OK, a fully saturated model still shows statistical significance for Rasagiline Use, age, and a strong association with CCS scores.

Let's do run AIC/BIC on this model to see what the review of a reduced model might look like.

```{r}

# Let's start by running AIC and then we can move to BIC for model comparison.
step_model_aic <- step(neg_bin_saturated, direction = "backward")  

# AIC selects a model of treatment group, age, and CCS. This makes intuitive clinical sense


# Let's run BIC
step_model_bic <- step(neg_bin_saturated, direction = "backward", k = log(nrow(data2_clean)))
summary(step_model_bic)

# BIC chooses a fully reduced model with only cqci. This doesn't make too much clinical sense, as our primary explanatory variable isn't involved at all. 
```

Both AIC and BIC preferred a reduced model. However, BIC preferred a model with only CCS. This doesn't make any intuitive sense. AIC however, was more flexible and preferred a model with Treatment Group, Age, and CCS. This makes the most clinical sense, and will be our preferred model for Aim 1.

## Results:

Let's run this one more time and get some final numbers:

```{r}

# Run the model
neg_bin_final <- glm.nb(days2dx ~ tx_group + age + cqci, data = data2_clean)
summary(neg_bin_final)

# Exponentiate to get interpretable results:
exp(coef(neg_bin_final))
exp(confint(neg_bin_final))

```

**When adjusting for age and Charleson comorbidity score, Individuals starting Levodopa monotherapy had an average time to diagnosis of \~702 days.**

-   **When controlling for Age and CCS, Individuals taking Rasagiline Dual-Therapy took, on average, 21% longer than expected to reach their diagnosis (p = .007, CI:1.06-1.41). This is both statistically and clinically significant.**

-   **When controlling for Age and CCS, Individuals taking Pramipexole Dual-Therapy took, on average, \~9% longer than expected to reach their diagnosis (p = .228, CI: 0.95-1.25). While not statistically significant, this is possibly clinically significant if a patient cannot tolerate Rasagiline.**

-   **When controlling for Treatment group and CCS, a 1-unit increase in age was associated with a .06% increase in time to dx (p = .021, 1.00-1.01). This suggests that individuals that develop Parkinson's Disease Earlier in life may have a worse prognosis for disease progression speed.**

-   **When controlling for Treatment group and Age, a 1-unit increase in CCS was associated with a 8% decrease in time to diagnosis (p \< .001 , CI: 0.90 - 0.93). This makes intuitive sense, as patients that are generally sicker will be less resilient to disease progression and will require more intensive treatment.**

### Assumptions:

Let's check our two remaining assumptions: Multicollinearity and Linearity of the Log-Link Function

#### Multicollinearity:

```{r}

# Multicollinearity can be assess by checking the VIF (Variance Inflation Factor): If the VIF is greater than 5, there is moderate concern. If the VIF is greater than 10, it's of severe concern.
vif(neg_bin_final)

# VIF is not greater than 1.06 for any variable. There is no multicollinearity.

```

#### Linearity of the Log-Link Function:

```{r}

# Linearity only matters for continous or ordinal variables. So we will only need to assess Age and CCS. This can be checked by component + residual plot.
crPlots(neg_bin_final)
```

There are some slight deviations, but overall, the relationship looks quite linear.

### Visualization

Great, now let's create some finished charts for our review:

Let's start by assessing our predicted values vs our observed values:

```{r}


# Predict count for each treatment group, holding age and score at their mean
plot_data <-ggpredict(neg_bin_final, terms = c("tx_group", "age [mean]", "cqci [mean]"))


# Plot it
plot1 <- ggplot(plot_data, aes(x = x, y = predicted, color = x)) +
  geom_point(size = 3) +
  geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = 0.2) +
  geom_errorbar(aes(ymin = conf.low, ymax = conf.high), width = 0.2) +
  labs(title = "Adjusted Predicted Counts by Treatment Group with Age + CCS scores held at Mean Value",
       x = "Treatment Group", y = "Days to Dx") +
  theme_minimal()

ggplotly(plot1)

```

Secondary View

```{r}

em <- emmeans(neg_bin_final, ~ tx_group)

plot(em)
```

View 3

```{r}
data2_clean$predicted <- predict(neg_bin_final, type = "response")

ggplot(data2_clean, aes(x = tx_group, y = days2dx)) +
  geom_jitter(width = 0.1, alpha = 0.5) +
  stat_summary(aes(y = predicted), fun = mean, geom = "point", size = 3, color = "red") +
  labs(title = "Observed vs Adjusted Predicted Counts by Treatment Group",
       x = "Treatment", y = "Count") +
  theme_minimal()
```
